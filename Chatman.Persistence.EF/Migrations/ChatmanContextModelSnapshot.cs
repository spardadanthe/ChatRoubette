// <auto-generated />
using System;
using Chatman.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chatman.Persistence.EF.Migrations
{
    [DbContext(typeof(ChatmanContext))]
    partial class ChatmanContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chatman.Conversation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("Id");

                    b.Property<string>("UsersParticipatingIds")
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("Chatman.Friendship", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("FirstUserId")
                        .IsRequired();

                    b.Property<string>("SecondUserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Friendship");
                });

            modelBuilder.Entity("Chatman.Message", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("ConversationId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("SenderId")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Chatman.User", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Chatman.Message", b =>
                {
                    b.HasOne("Chatman.Conversation")
                        .WithMany("History")
                        .HasForeignKey("ConversationId");
                });
#pragma warning restore 612, 618
        }
    }
}
