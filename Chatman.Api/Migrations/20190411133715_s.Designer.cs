// <auto-generated />
using System;
using Chatman.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chatman.Api.Migrations
{
    [DbContext(typeof(ChatmanContext))]
    [Migration("20190411133715_s")]
    partial class s
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chatman.Persistence.EF.Dtos.ConversationDto", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("OwnerId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("Chatman.Persistence.EF.Dtos.FriendshipDto", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstUserId");

                    b.Property<string>("SecondUserId");

                    b.HasKey("Id");

                    b.HasIndex("FirstUserId");

                    b.HasIndex("SecondUserId");

                    b.ToTable("Friendships");
                });

            modelBuilder.Entity("Chatman.Persistence.EF.Dtos.MessageDto", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConversationId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("SenderId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Chatman.Persistence.EF.Dtos.UserDto", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Chatman.Persistence.EF.Dtos.ConversationDto", b =>
                {
                    b.HasOne("Chatman.Persistence.EF.Dtos.UserDto", "Owner")
                        .WithMany("Conversations")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Chatman.Persistence.EF.Dtos.FriendshipDto", b =>
                {
                    b.HasOne("Chatman.Persistence.EF.Dtos.UserDto", "FirstUser")
                        .WithMany()
                        .HasForeignKey("FirstUserId");

                    b.HasOne("Chatman.Persistence.EF.Dtos.UserDto", "SecondUser")
                        .WithMany()
                        .HasForeignKey("SecondUserId");
                });

            modelBuilder.Entity("Chatman.Persistence.EF.Dtos.MessageDto", b =>
                {
                    b.HasOne("Chatman.Persistence.EF.Dtos.ConversationDto", "Conversation")
                        .WithMany()
                        .HasForeignKey("ConversationId");
                });
#pragma warning restore 612, 618
        }
    }
}
